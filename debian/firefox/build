#!/bin/bash

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
DOT_HOME="$(dirname "$(dirname "$SCRIPT_DIR")")"

source "$DOT_HOME/lib/debian/include.sh"

MODULE="firefox"
init_module_logging "$MODULE"

log_header "Building Firefox Configuration"

# Firefox profile directory (Flatpak path for Silverblue)
FIREFOX_PROFILE_DIR="$HOME/.var/app/org.mozilla.firefox/.mozilla/firefox"
DEFAULT_PROFILE=""

# Find default profile
if [[ -d "$FIREFOX_PROFILE_DIR" ]]; then
    # Look for profiles.ini to find default profile
    if [[ -f "$FIREFOX_PROFILE_DIR/profiles.ini" ]]; then
        DEFAULT_PROFILE=$(grep -A2 "\[Profile0\]" "$FIREFOX_PROFILE_DIR/profiles.ini" | grep "Path=" | cut -d'=' -f2)
    fi
    
    # Fallback: find any profile directory
    if [[ -z "$DEFAULT_PROFILE" ]]; then
        DEFAULT_PROFILE=$(find "$FIREFOX_PROFILE_DIR" -maxdepth 1 -name "*.default*" -type d -printf "%f\n" | head -1)
    fi
fi

if [[ -n "$DEFAULT_PROFILE" ]]; then
    PROFILE_PATH="$FIREFOX_PROFILE_DIR/$DEFAULT_PROFILE"
    log_info "Found Firefox profile: $DEFAULT_PROFILE"
    
    log_step "Installing Firefox configuration files"
    
    # Copy user.js (Firefox preferences)
    if [[ -f "$SCRIPT_DIR/config/user.js" ]]; then
        cp "$SCRIPT_DIR/config/user.js" "$PROFILE_PATH/user.js"
    fi
    
    # Create chrome directory and copy userChrome.css
    if [[ -f "$SCRIPT_DIR/config/userChrome.css" ]]; then
        mkdir -p "$PROFILE_PATH/chrome"
        cp "$SCRIPT_DIR/config/userChrome.css" "$PROFILE_PATH/chrome/userChrome.css"
    fi
    
    log_success "Firefox configuration installed"
else
    log_warning "No Firefox profile found. Install Firefox and run it once to create a profile."
fi

log_success "Firefox configuration build completed"
finalize_module_logging "success"
