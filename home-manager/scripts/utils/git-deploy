#!/usr/bin/env ruby

require 'bundler/inline'

gemfile do
  source 'https://rubygems.org'

  gem 'tty-prompt'
  gem 'colorize'
end

class FailedToPush < StandardError; end
class FailedToCreatePullRequest < StandardError; end

tty = TTY::Prompt.new

def cmd(str) = str.colorize(:blue)

FetchPrune = Struct.new do
  def self.exec! = new.exec!
  def exec!
    puts cmd(to_s)
    system(to_s)
  end
  def to_s = "git fetch --prune"
end

BranchCurrent = Struct.new do
  def self.exec! = new.exec!
  def exec!
    puts cmd(to_s)
    `#{to_s}`.chomp
  end
  def to_s = "git branch --show-current"
end

SetupUpstream = Struct.new(:tty, :branch, keyword_init: true) do
  def self.exec!(**kwargs) = new(**kwargs).exec!
  def exec!
    if !tty.yes?('Use default upstream branch?')
      `git branch -r`.chomp.split("\n").map(&:strip).then do |origin_branch_list|
        self.branch = tty.select('Select upstream branch:', origin_branch_list, filter: true)
        puts cmd(to_s)
        system(to_s)
      end
    end
  end
  def to_s = "git branch --set-upstream-to=#{branch}"
end

Push = Struct.new(:tty, :branch, keyword_init: true) do
  def self.exec!(**kwargs) = new(**kwargs).exec!
  def exec!
    if tty.yes?("Push to origin/#{branch}?")
      puts cmd(to_s)
      system("git push -u origin #{branch}")
    end => pushed
    
    raise FailedToPush unless pushed
  end
  def to_s = "git push -u origin #{branch}"
end

begin
  begin
    FetchPrune.exec!
    SetupUpstream.exec!(tty:)
    BranchCurrent.exec! => branch
    Push.exec!(tty:, branch:)
  rescue FailedToPush => e
    puts 'Failed to push.'
    puts e.message
    retry
  end

  create_pr = tty.yes?('Create pull request?')
  as_draft = tty.yes?('As draft?') if create_pr

  begin
    pr_created = system("gh pr create #{'-d' if as_draft} --fill") if create_pr
    raise FailedToCreatePullRequest if !pr_created && create_pr
  rescue FailedToCreatePullRequest
    puts 'Failed creating pull request'
    retry
  end


  system('gh pr view --web') if pr_created && tty.yes?('Open pull request in browser?')
rescue Interrupt
  puts
  exit 130
end
