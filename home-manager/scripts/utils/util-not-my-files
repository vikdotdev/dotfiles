#!/usr/bin/env ruby

require 'pathname'

uid = Process.uid
gid = Process.gid

# Define a method to check if a file or directory is not owned by the current user or group
def not_owned_by_current_user_or_group?(path, uid, gid)
  stat = File::Stat.new(path)

  stat.uid != uid || stat.gid != gid
end

# Define a method to recursively traverse a directory and show files and
# directories not owned by current user or group
def traverse_directory(path, uid, gid)
  if File.file?(path) && not_owned_by_current_user_or_group?(path, uid, gid)
    puts "#{path} is not owned by the current user or group"
  elsif File.directory?(path) && not_owned_by_current_user_or_group?(path, uid, gid)
    puts "#{path} is not owned by the current user or group"

    Dir.foreach(path) do |entry|
      next if entry == '.' || entry == '..'

      traverse_directory("#{path}/#{entry}", uid, gid)
    end
  end
end

path = ARGV.first
path = Pathname.new(path.chomp("/")) if path

traverse_directory(path || Dir.pwd, uid, gid)
