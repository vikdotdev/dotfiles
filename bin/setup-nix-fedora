#!/usr/bin/env bash
# One-command setup for new machines with Nix

set -e

echo "=== Setting up dotfiles with Nix ==="

# Install Nix if not present
if ! command -v nix &> /dev/null; then
  echo "Installing Nix..."
  sh <(curl -L https://nixos.org/nix/install)
  # Source nix
  . ~/.nix-profile/etc/profile.d/nix.sh
fi

# Install basic system dependencies
echo "Installing system dependencies..."
sudo dnf update -y
sudo dnf install git ruby ruby-devel -y

# Clone dotfiles if not present
mkdir -p ~/Repositories
pushd ~/Repositories
if [ ! -d dotfiles ]; then
  echo "Cloning dotfiles..."
  git clone https://github.com/vikdotdev/dotfiles
fi

pushd dotfiles

# Set up Ruby environment
export GEM_HOME=$HOME/.gem/ruby
[[ ! -e $HOME/.gem/ruby/bin ]] &&
  mkdir -p "$HOME/bin" "$HOME/.gem/ruby" &&
  ln -s $HOME/bin $HOME/.gem/ruby/

# Install Home Manager
echo "Installing Home Manager..."
if ! nix profile list | grep -q "home-manager"; then
  nix profile install nixpkgs#home-manager
else
  echo "Home Manager already installed"
fi

# Set up Home Manager
echo "Setting up Home Manager..."
mkdir -p ~/.config/home-manager

# Create importing flake that points to dotfiles repo
cat > ~/.config/home-manager/flake.nix << 'EOF'
{
  description = "Home Manager configuration - imports from dotfiles repo";

  inputs = {
    dotfiles.url = "path:$HOME/Repositories/dotfiles";
  };

  outputs = { dotfiles, ... }: dotfiles.outputs;
}
EOF

echo "Created importing flake at ~/.config/home-manager/flake.nix"

# Deploy Nix configurations
echo "Deploying Home Manager configuration..."
./bin/dot nix

# Apply Home Manager
echo "Applying Home Manager configuration..."
home-manager switch --flake ~/.config/home-manager#vik@$(hostname)

# Run non-Nix installation (packages, fonts, etc.)
echo "Running remaining system setup..."
./bin/dot install

popd # dotfiles
popd # ~/Repositories

echo ""
echo "=== Setup complete! ==="
echo "Restart your terminal or run: exec bash"
echo "Then verify with: nix --version && home-manager --version"