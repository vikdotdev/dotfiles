#!/usr/bin/env ruby

require 'bundler/inline'

gemfile do
  source 'https://rubygems.org'

  gem 'tty-prompt'
  gem 'terminal-table'
  gem 'colorize'
end
require 'tty-prompt'
require 'terminal-table'
require 'optparse'

# Parse command-line options
options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: git_summary.rb --since=TIME_PERIOD"
  opts.on("--since=TIME", "Specify the time period (e.g., '6.months')") do |time|
    options[:since] = time
  end
  opts.on("--ext=EXT", "File extension glob e.g. *.rb") do |ext|
    options[:ext] = ext
  end
end.parse!

# Function to parse git log output
def parse_git_log(since = nil, ext = nil)
  cmd = %Q{git log --numstat --pretty="%ae %H"}
  cmd << %Q{ --since=#{since}} if !since.nil?
  cmd << %Q{ -- "#{ext}"} if !ext.nil?
  puts "Running: #{cmd.colorize(:blue)}"
  log_data = `#{cmd}`
  commits = {}

  email = nil
  hash = nil

  log_data.each_line do |line|
    if line.match?(/@.* [a-f0-9]{40}/)
      email, hash = line.strip.split
      commits[email] ||= { commits_count: 0, insertions: 0, deletions: 0, files_changed: 0 }
      commits[email][:commits_count] += 1
    elsif line.match?(/^\d+/)
      insertions, deletions, _file = line.strip.split("\t")
      commits[email][:insertions] += insertions.to_i
      commits[email][:deletions] += deletions.to_i
      commits[email][:files_changed] += 1
    end
  end
  commits
end

# Generate and display summary table
def display_summary(commits)
  sorted_commits = commits.sort_by do |_, data|
    (data[:insertions] + data[:deletions] + data[:commits_count]) * -1
  end
  
  table = Terminal::Table.new do |t|
    t.headings = ['Author', 'Insertions', 'Deletions', 'Commits', 'Files Changed']
    sorted_commits.each do |author, data|
      t.add_row([author,data[:insertions], data[:deletions], data[:commits_count], data[:files_changed]])
    end
  end
  puts table
end

# Run the script
git_commits = parse_git_log(options[:since], options[:ext])
display_summary(git_commits)
